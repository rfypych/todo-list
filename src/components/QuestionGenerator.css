/* Question Generator Styles */
.question-generator-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  padding: 20px;
  overflow-y: auto;
}

.question-generator-container {
  background-color: var(--card-bg);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-hover);
  width: 90%;
  max-width: 800px;
  max-height: 90vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  animation: fadeIn 0.3s ease-out;
}

.question-generator-header {
  background-color: var(--primary-color);
  color: white;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 10;
}

.question-generator-header h3 {
  margin: 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 1.2rem;
}

.header-actions {
  display: flex;
  gap: 0.5rem;
}

.settings-btn,
.close-btn {
  background: rgba(255, 255, 255, 0.2);
  color: white;
  font-size: 1rem;
  padding: 8px;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition);
}

.settings-btn:hover,
.close-btn:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.1);
}

.question-generator-content {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.task-info {
  background-color: rgba(var(--primary-rgb), 0.1);
  padding: 1rem;
  border-radius: var(--border-radius-sm);
  border-left: 4px solid var(--primary-color);
}

.task-info h4 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  color: var(--primary-color);
}

.task-title {
  font-weight: 600;
  font-size: 1.1rem;
  margin: 0.5rem 0;
}

.task-description {
  margin: 0.5rem 0;
  color: var(--text-secondary);
  font-size: 0.95rem;
}

.question-settings {
  background-color: var(--bg-light);
  padding: 1.25rem;
  border-radius: var(--border-radius-sm);
  border: 1px solid var(--border-color);
}

.question-settings h4 {
  margin-top: 0;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.setting-group {
  margin-bottom: 1.25rem;
}

.setting-group:last-child {
  margin-bottom: 0;
}

.setting-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  font-size: 0.95rem;
}

.setting-options {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.setting-btn {
  background-color: var(--bg-light);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  padding: 0.5rem 0.75rem;
  border-radius: var(--border-radius-sm);
  font-size: 0.9rem;
  transition: var(--transition);
}

.setting-btn:hover {
  background-color: var(--bg-hover);
}

.setting-btn.active {
  background-color: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}

.count-input {
  width: 60px;
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);
  font-size: 0.9rem;
  text-align: center;
}

.bloom-levels {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: 0.5rem;
}

.generate-actions {
  display: flex;
  justify-content: center;
  margin-top: 1rem;
}

.generate-btn {
  background-color: var(--primary-color);
  color: white;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  border-radius: var(--border-radius-sm);
  transition: var(--transition);
}

.generate-btn:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
}

.generate-btn:disabled {
  background-color: var(--disabled-color);
  cursor: not-allowed;
  transform: none;
}

.error-message {
  background-color: rgba(var(--danger-rgb), 0.1);
  color: var(--danger-color);
  padding: 0.75rem;
  border-radius: var(--border-radius-sm);
  border-left: 4px solid var(--danger-color);
}

.questions-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.questions-container h4 {
  margin: 0;
  color: var(--text-primary);
  font-size: 1.1rem;
}

.question-item {
  background-color: var(--bg-light);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);
  padding: 1.25rem;
  margin-bottom: 1.5rem;
}

.question-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

.question-number {
  background-color: var(--primary-color);
  color: white;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.8rem;
  font-weight: 600;
}

.question-type {
  background-color: rgba(var(--primary-rgb), 0.1);
  color: var(--primary-color);
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 600;
}

.question-difficulty {
  background-color: rgba(var(--secondary-rgb), 0.1);
  color: var(--secondary-color);
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 600;
}

.question-bloom-level {
  background-color: rgba(var(--success-rgb), 0.1);
  color: var(--success-color);
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 600;
}

.question-text {
  font-size: 1.1rem;
  font-weight: 600;
  margin-bottom: 1.25rem;
  line-height: 1.4;
}

.question-options {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-bottom: 1.25rem;
}

.option-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);
  transition: var(--transition);
}

.option-item:hover {
  background-color: var(--bg-hover);
}

.option-item input[type="radio"] {
  width: 18px;
  height: 18px;
}

.option-item label {
  flex: 1;
  cursor: pointer;
}

.question-explanation {
  background-color: rgba(var(--info-rgb), 0.1);
  padding: 0.75rem;
  border-radius: var(--border-radius-sm);
  border-left: 4px solid var(--info-color);
  margin-top: 1rem;
}

.question-explanation p {
  margin: 0;
  font-size: 0.9rem;
  color: var(--text-secondary);
}

.essay-response {
  margin-bottom: 1.25rem;
}

.response-guide {
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin-bottom: 0.5rem;
}

.essay-textarea {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);
  font-family: inherit;
  font-size: 0.95rem;
  resize: vertical;
}

.true-false-options {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.25rem;
}

.fill-blank-input {
  width: 100%;
  max-width: 300px;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);
  font-size: 0.95rem;
  margin-bottom: 1.25rem;
}

.matching-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  margin-bottom: 1.25rem;
}

@media (min-width: 768px) {
  .matching-container {
    flex-direction: row;
  }
}

.matching-terms,
.matching-definitions {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.matching-term,
.matching-definition {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);
  background-color: var(--bg-light);
}

.term-label,
.def-number {
  font-weight: 600;
  color: var(--primary-color);
}

.matching-select {
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);
  margin-left: auto;
}

.question-rubric {
  background-color: rgba(var(--warning-rgb), 0.1);
  padding: 0.75rem;
  border-radius: var(--border-radius-sm);
  border-left: 4px solid var(--warning-color);
}

.question-rubric p {
  margin: 0;
  font-size: 0.9rem;
  color: var(--text-secondary);
}

/* Add button style for TodoItem */
.question-btn {
  background-color: var(--info-color);
  color: white;
  border: none;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition);
}

.question-btn:hover {
  background-color: var(--info-dark);
  transform: translateY(-2px);
}

/* Animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
